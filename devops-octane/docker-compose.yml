version: '3'
services:
  octane:
    env_file:
      - .env
    image: admpresales/octane:${OCTANE_TAG}
    ports:
      - "8085:8080"
    container_name: octane
    hostname: octane.aos.com
    shm_size: 2g
    networks:
      - demo-net
  aos_postgres:
    image: admpresales/aos-postgres:${AOS_TAG}
    ports:
    - "${POSTGRES_PORT}:5432"
    container_name: aos_postgres
    restart: always
    networks:
        - demo-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 20s
      timeout: 3s
      retries: 5
  aos_accountservice:
    env_file:
    - .env
    image: admpresales/aos-accountservice:${AOS_TAG}
    ports:
    - "${ACCOUNT_PORT}:8080"
    depends_on:
    - "aos_postgres"
    container_name: aos_accountservice
    restart: always
    networks:
        - demo-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 20s
      timeout: 3s
      retries: 5
  aos_main:
    env_file:
    - .env
    image: admpresales/aos-main-app:${AOS_TAG}
    ports:
    - "${MAIN_PORT}:8080"
    depends_on:
    - "aos_accountservice"
    container_name: aos_main
    restart: always
    networks:
        - demo-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 20s
      timeout: 3s
      retries: 5
  devops:
    env_file:
      - .env
    image: admpresales/devops-dev:${DEVOPS_TAG}
    depends_on:
        - "octane"
    command: ["/startup/wait-for-it/wait-for-it.sh", "octane:8080", "-t", "90", "--", "/startup/start_jenkins.sh"]
    ports:
      - "8090:8080"
    container_name: devops
    networks:
          - demo-net
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8080"]
        interval: 20s
        timeout: 3s
        retries: 8
networks:
   demo-net:
     external: true

